(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{448:function(s,t,a){"use strict";a.r(t);var e=a(52),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志"}},[s._v("#")]),s._v(" 日志")]),s._v(" "),a("h2",{attrs:{id:"拦截日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拦截日志"}},[s._v("#")]),s._v(" 拦截日志")]),s._v(" "),a("p",[s._v("拦截日志日志存储在 error.log 中。拦截记录的日志等级为 ALERT。\n格式为 "),a("code",[s._v("ngx_waf: [规则类型][触发的具体规则]")]),s._v("。")]),s._v(" "),a("p",[s._v("您可以使用下列命令快速查看拦截日志。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /path/to/error.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" ngx_waf:\n")])])]),a("p",[s._v("下面是两个例子。")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('2020/01/20 22:56:30 [alert] 6666#0: *30 ngx_waf: [BLACK-URL][(?i)(?:/\\.env$)], client: 192.168.1.1, server: example.com, request: "GET /v1/.env HTTP/1.1", host: "example.com", referrer: "http:/example.com/v1/.env"\n\n2020/01/20 22:58:40 [alert] 6667#0: *11 ngx_waf: [BLACK-POST][(?i)(?:select.+(?:from|limit))], client: 192.168.1.1, server: example.com, request: "POST /xmlrpc.php HTTP/1.1", host: "example.com", referrer: "https://example.com/"\n')])])]),a("h2",{attrs:{id:"调试日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调试日志"}},[s._v("#")]),s._v(" 调试日志")]),s._v(" "),a("p",[s._v("当您在 nginx 的配置文件中将错误日志的等级调整为 "),a("code",[s._v("debug")]),s._v(" 时，会在 error.log 中输出调试日志，\n用以排障。格式为 "),a("code",[s._v("ngx_waf_debug: 调试信息")]),s._v("。")]),s._v(" "),a("p",[s._v("您可以使用下列命令快速查看调试日志。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /path/to/error.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" ngx_waf_debug:\n")])])]),a("p",[s._v("下面是一段典型的调式日志，表示了一次 CC 防御检测的流程。")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Start the CC inspection process.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: The module context has been obtained.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: The configuration of the module has been obtained.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Detection has begun.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Shared memory is locked.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Shared memory is unlocked.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Detection is over.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: The CC detection process is fully completed.\n")])])]),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[s._v("敏感信息泄露")]),s._v(" "),a("p",[s._v("在最新的 "),a("code",[s._v("Current")]),s._v(" 版本中，调试日志可能会包含一些敏感信息，比如服务器接收和发送的数据，验证码的密钥等。\n提供调试日志时建议通过邮箱发送给我们。你可以在"),a("a",{attrs:{href:"https://github.com/ADD-SP",target:"_blank",rel:"noopener noreferrer"}},[s._v("这里"),a("OutboundLink")],1),s._v("找到我们的邮箱。")])]),s._v(" "),a("h2",{attrs:{id:"自定义日志格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义日志格式"}},[s._v("#")]),s._v(" 自定义日志格式")]),s._v(" "),a("p",[s._v("nginx 允许自定义日志格式，并且一个 server 块可以同时写入多个日志文件，\n这就给我我们自定义日志格式的机会。本模块提供了几个"),a("RouterLink",{attrs:{to:"/zh-cn/advance/variable.html"}},[s._v("内置变量")]),s._v("，稍加利用即可实现。\n下面是一个例子。")],1),s._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[s._v("...\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("http")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ...\n\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("log_format")]),s._v("  main    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$remote_addr")]),s._v(" - "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$remote_user")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$time_local]")]),s._v(' "'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$request")]),s._v("\" '")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$status")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$body_bytes_sent")]),s._v(' "'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$http_referer")]),s._v("\" '")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\""),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$http_user_agent")]),s._v('" "'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$http_x_forwarded_for")]),s._v("\"'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("log_format")]),s._v(" yaml     "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'- remote_addr: \""),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$remote_addr")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token escape entity"}},[s._v("\\n")]),s._v("'")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  remote_user: \""),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$remote_user")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token escape entity"}},[s._v("\\n")]),s._v("'")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  time_local: \""),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$time_local")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token escape entity"}},[s._v("\\n")]),s._v("'")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  request: \""),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$request")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token escape entity"}},[s._v("\\n")]),s._v("'")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  status: \""),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$status")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token escape entity"}},[s._v("\\n")]),s._v("'")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  body_bytes_sent: \""),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$body_bytes_sent")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token escape entity"}},[s._v("\\n")]),s._v("'")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  http_referer: \""),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$http_referer")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token escape entity"}},[s._v("\\n")]),s._v("'")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  http_user_agent: \""),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$http_user_agent")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token escape entity"}},[s._v("\\n")]),s._v("'")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  http_x_forwarded_for: \""),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$http_x_forwarded_for")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token escape entity"}},[s._v("\\n")]),s._v("'")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  waf_blocked: "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$waf_blocked")]),a("span",{pre:!0,attrs:{class:"token escape entity"}},[s._v("\\n")]),s._v("'")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  waf_spend: "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$waf_spend")]),a("span",{pre:!0,attrs:{class:"token escape entity"}},[s._v("\\n")]),s._v("'")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  waf_rule_type: \""),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$waf_rule_type")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token escape entity"}},[s._v("\\n")]),s._v("'")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  waf_rule_details: \""),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$waf_rule_details")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token escape entity"}},[s._v("\\n")]),s._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        ...\n\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("access_log")]),s._v("  logs/access.log  main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("access_log")]),s._v("  logs/access.yml  yaml   if="),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$waf_log")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("access_log")]),s._v("  logs/waf.yml     yaml   if="),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$waf_blocking_log")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        ...\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    ...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n...\n")])])]),a("p",[s._v("上述配置会有如下效果：")]),s._v(" "),a("ul",[a("li",[s._v("常规的访问日志写入 "),a("code",[s._v("logs/access.log")]),s._v(" 中。")]),s._v(" "),a("li",[s._v("YAML 格式的访问日志写入 "),a("code",[s._v("logs/access.yml")]),s._v(" 中。")]),s._v(" "),a("li",[s._v("YAML 格式的拦截日志写入 "),a("code",[s._v("logs/waf.yml")]),s._v(" 中。")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("日志分析")]),s._v(" "),a("p",[s._v("你可以自定义日志格式，然后通过程序分析并制作统计图表。")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("关于 YAML 格式")]),s._v(" "),a("p",[s._v("YAML 是一种可读性高的数据序列化格式，学习十分简单，只要能看懂 JSON，学习 YAML 也就一会儿的事情。\n可以自行搜索 YAML 的格式说明。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);